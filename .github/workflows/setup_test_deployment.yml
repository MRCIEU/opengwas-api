name: Setup test deployment

on:
  workflow_dispatch:
    inputs:
      image_tag:
        required: true
        type: string

jobs:
  setup-test-deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout infrastructure repo
      run: |
        gh auth login --with-token <<< "${{ secrets.OG_INFRA_REPO_PAT }}"
        gh repo clone ${{ secrets.OG_INFRA_REPO }} infra-repo
        cd infra-repo
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        gh repo set-default ${{ secrets.OG_INFRA_REPO }}
        gh auth setup-git
      env:
        GH_TOKEN: ${{ secrets.OG_INFRA_REPO_PAT }}

    - name: Update kustomization.yaml and deployment replicas
      run: |
        cd infra-repo/kubernetest-manifests/og-api-test

        # Update image tag
        yq eval '.images[0].newTag = "${{ github.event.client_payload.image_tag }}"' -i kustomization.yaml

        # Set replicas to 1
        yq eval '.spec.replicas = 1' -i api-deployment.yaml

    - name: Commit and push changes using gh CLI
      run: |
        cd infra-repo
        git add .
        git commit -m "Update api_image_test to tag ${{ github.event.client_payload.image_tag }}"
        git push
      env:
        GH_TOKEN: ${{ secrets.OG_INFRA_REPO_PAT }}

    - name: Wait for test deployment readiness
      env:
        TEST_URL: ${{ secrets.OG_API_TEST_URL }}/api/status
        EXPECTED_BUILD: ${{ github.event.client_payload.image_tag }}
      run: |
        echo "🕒 Wait for 3 minutes before starting polling..."
        sleep 180
        
        echo "⏳ Start polling test deployment status..."
        TIMEOUT=900  # 15 minutes
        INTERVAL=15  # seconds
        ELAPSED=0
    
        while [ $ELAPSED -lt $TIMEOUT ]; do
          RESPONSE=$(curl -s --max-time 10 -w "%{http_code}" "$TEST_URL") || RESPONSE=""
          HTTP_CODE="${RESPONSE: -3}"
          BODY="${RESPONSE:0:-3}"
    
          if [ "$HTTP_CODE" = "200" ]; then
            BUILD_TAG=$(echo "$BODY" | jq -r '.API__BUILD')
            echo "Status build: $BUILD_TAG, expecting: $EXPECTED_BUILD"
    
            if [ "$BUILD_TAG" = "$EXPECTED_BUILD" ]; then
              echo "✅ Deployment ready with expected build tag."
              exit 0
            fi
          else
            echo "Waiting for status 200, got $HTTP_CODE or request timed out."
          fi
    
          sleep $INTERVAL
          ELAPSED=$((ELAPSED + INTERVAL))
        done
    
        echo "❌ Timeout reached: Deployment not ready in 15 minutes."
        exit 1

    - name: Trigger run_pytest workflow
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh workflow run run_pytest.yml \
          --repo ${{ github.repository }} \
          --ref master \
          --field image_tag=${{ github.event.inputs.image_tag }}
