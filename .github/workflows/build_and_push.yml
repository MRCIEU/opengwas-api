name: Build image and push to OCI Registry

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to OCI registry
      uses: docker/login-action@v3
      with:
        registry: lhr.ocir.io
        username: ${{ secrets.OCI_REGISTRY_USERNAME }}
        password: ${{ secrets.OCI_REGISTRY_PASSWORD }}

    - name: Generate version tag
      id: generate_tag
      run: |
        DATE=$(date -u +%Y%m%d)
        TIME=$(date -u +%H%M)
        IMAGE_TAG="$DATE.$TIME"
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build image
      run: |
        docker build --platform linux/amd64 -t og-api -f Dockerfile-oci \
          --build-arg IMAGE_TAG=${{ steps.generate_tag.outputs.image_tag }} .

    - name: Tag image with OCI tag
      run: |
        docker tag og-api:latest lhr.ocir.io/ieup4/opengwas/api:${{ steps.generate_tag.outputs.image_tag }}

    - name: Push image to OCI
      run: |
        docker push lhr.ocir.io/ieup4/opengwas/api:${{ steps.generate_tag.outputs.image_tag }}

    - name: Print image tag
      run: |
        echo "âœ… Published version: ${{ steps.generate_tag.outputs.image_tag }}"

    - name: Trigger setup_test_deployment workflow
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh workflow run setup_test_deployment.yml \
          --repo ${{ github.repository }} \
          --ref master \
          --field image_tag=${{ steps.generate_tag.outputs.image_tag }}
