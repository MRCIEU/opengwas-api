version: '3.4'

networks:
  og-api:
    name: og-api

services:
  og-api:
    image: og-api
    build:
      context: .
      dockerfile: ./Dockerfile-dev
    ports:
      - "8019:8019"
      - "5678:5678"
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
      - ENV=local
      - ACCESS=private
    volumes:
      - ./app:/app
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --listen 0.0.0.0:5678 -m flask run --host 0.0.0.0 --port 8019"]
    networks:
      - og-api

  og-neo4j:
    image: neo4j:5.13
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./app/data/neo4j-v5/data:/data
      - ./app/data/neo4j-backup:/backup
    environment:
      - NEO4J_AUTH=neo4j/HbS4B47FR9bQAFq9
    networks:
      - og-api

  # mr-base-api-cromwell:
  #   build: ./app/resources/workflow
  #   restart: always
  #   environment:
  #     - JAVA_OPTS=-Ddocker.hash-lookup.enabled=false -Dsystem.max-concurrent-workflows=12 -Dbackend.providers.Local.config.root=/data/cromwell-executions -Dworkflow-options.workflow-log-dir=/data/cromwell-workflow-logs -Ddatabase.profile=slick.jdbc.MySQLProfile$$ -Ddatabase.db.driver=com.mysql.cj.jdbc.Driver -Ddatabase.db.url=jdbc:mysql://mr-base-api-cromwell-mysql/cromwell?rewriteBatchedStatements=true -Ddatabase.db.user=${database_db_user} -Ddatabase.db.password=${database_db_password} -Ddatabase.db.connectionTimeout=5000
  #   ports:
  #   - "8001:8000"
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock
  #   - /data:/data
  #   - /etc/timezone:/etc/timezone:ro
  #   - /data/ref/ld_files:/data/ld_files
  #   command: ["server"]
  #   depends_on:
  #     - mr-base-api-cromwell-mysql
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000"]

  # mr-base-api-cromwell-mysql:
  #   image: mysql:5.7
  #   restart: always
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${database_db_password}
  #     - MYSQL_DATABASE=cromwell
  #     - MYSQL_USER=${database_db_user}
  #     - MYSQL_PASSWORD=${database_db_password}
  #   volumes:
  #       - /data/cromwell-mysql:/var/lib/mysql
  #       - /etc/timezone:/etc/timezone:ro
  #   healthcheck:
  #     test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
